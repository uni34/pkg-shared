{"version":3,"file":"mt-shared.mjs","sources":["../../../projects/mt-shared/src/lib/directive/ascii-restrict-input.directive.ts","../../../projects/mt-shared/src/lib/pipe/currency-pipe.ts","../../../projects/mt-shared/src/lib/pipe/payment-card-requisites-pipe.ts","../../../projects/mt-shared/src/lib/mt-shared.module.ts","../../../projects/mt-shared/src/public-api.ts","../../../projects/mt-shared/src/mt-shared.ts"],"sourcesContent":["import {Directive} from '@angular/core';\r\nimport {HostListener} from '@angular/core';\r\n\r\n@Directive({\r\n    selector: '[appAsciiRestrictInput]'\r\n})\r\nexport class AsciiRestrictInputDirective {\r\n\r\n    private navigationKeys = ['Backspace', 'Delete', 'Tab', 'Escape', 'Enter', 'Home', 'End', 'ArrowLeft', 'ArrowRight', 'Clear', 'Copy', 'Paste'];\r\n\r\n    @HostListener('paste', ['$event'])\r\n    onPaste(event: ClipboardEvent) {\r\n        event.preventDefault();\r\n        const replacement = event?.clipboardData?.getData('text/plain').replace(/[^\\x00-\\x7F]/g, '');\r\n        document.execCommand('insertText', false, replacement);\r\n    }\r\n\r\n    @HostListener('keydown', ['$event'])\r\n    onKeyDown(event: Event) {\r\n        if (event instanceof KeyboardEvent) {\r\n            if (this.navigationKeys.indexOf(event.key) > -1 || this.isKeyBoardCmd(event)) {\r\n                return;\r\n            }\r\n            if (event.key.charCodeAt(0) > 127) {\r\n                event.preventDefault();\r\n            }\r\n        }\r\n    }\r\n\r\n    private isKeyBoardCmd(e: KeyboardEvent): boolean {\r\n        return (e.keyCode === 65 && (e.ctrlKey || e.metaKey)) ||\r\n            (e.keyCode === 67 && (e.ctrlKey || e.metaKey)) ||\r\n            (e.keyCode === 86 && (e.ctrlKey || e.metaKey)) ||\r\n            (e.keyCode === 88 && (e.ctrlKey || e.metaKey)) || e.ctrlKey;\r\n    }\r\n}\r\n","import {PipeTransform} from '@angular/core';\r\nimport {Pipe} from '@angular/core';\r\nimport {getCurrencySymbol} from '@angular/common';\r\n\r\n@Pipe({\r\n    name: 'currency'\r\n})\r\nexport class CurrencyPipe implements PipeTransform {\r\n\r\n    constructor() {\r\n    }\r\n\r\n    transform(value: any, currencyCode: string): string | null {\r\n        const currencySymbol = getCurrencySymbol(currencyCode, 'narrow');\r\n        const transformedVal = new Intl.NumberFormat([], {minimumFractionDigits: 0, maximumFractionDigits: 10}).format(value);\r\n        return `${currencySymbol} ${transformedVal}`;\r\n    }\r\n\r\n}\r\n","import {PipeTransform} from '@angular/core';\r\nimport {Pipe} from '@angular/core';\r\n\r\n// TODO: temporary solution. this class should be move to another package.\r\n//  this package only for classes that will be shared among different projects\r\n@Pipe({\r\n    name: 'paymentCardRequisites'\r\n})\r\nexport class PaymentCardRequisitesPipe implements PipeTransform {\r\n\r\n    private requisitesRegex = new RegExp(\r\n        '(\\\\d{4}[-. ]?)(\\\\d{3}[-. ]?){2}\\\\d{3}|(\\\\d{4}[-. ]?)(\\\\d{6}[-. ]?)\\\\d{5}|(\\\\d{4}[-. ]?){3}\\\\d{4}|(\\\\d{8}[-. ]?)\\\\d{10}'\r\n    );\r\n    private invalidCharsRegex = new RegExp('[\\\\s.-]+', 'g');\r\n\r\n    transform(value: any, ...args: any[]): any {\r\n        const requisites = this.requisitesRegex.exec(value)?.[0];\r\n        if (requisites) {\r\n            const transformedRequisites = requisites.replace(this.invalidCharsRegex, '');\r\n            return value.replace(requisites, transformedRequisites);\r\n        }\r\n        return value;\r\n    }\r\n}\r\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {AsciiRestrictInputDirective} from './directive/ascii-restrict-input.directive';\nimport {CurrencyPipe} from './pipe/currency-pipe';\nimport {PaymentCardRequisitesPipe} from './pipe/payment-card-requisites-pipe';\n\n\n@NgModule({\n  declarations: [\n    AsciiRestrictInputDirective,\n    CurrencyPipe,\n    PaymentCardRequisitesPipe\n  ],\n  imports: [\n    CommonModule\n  ],\n  providers: [\n    CurrencyPipe,\n    PaymentCardRequisitesPipe\n  ],\n  exports: [\n    AsciiRestrictInputDirective,\n    CurrencyPipe,\n    PaymentCardRequisitesPipe\n  ]\n})\nexport class MtSharedModule {\n}\n","/*\n * Public API Surface of mt-shared\n */\n\nexport * from './lib/directive/ascii-restrict-input.directive';\nexport * from './lib/pipe/currency-pipe';\nexport * from './lib/pipe/payment-card-requisites-pipe';\nexport * from './lib/mt-shared.module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}